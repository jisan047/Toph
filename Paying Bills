/**********************************************************************\
|           _______  _     _____    ____   ___     _                   |
|          |___   _|(_)   / ___/   / _  | |   \   | |                  |
|              | |  | |  / /___   / /_| | | |\ \  | |                  |
|           _  | |  | | /___  /  /  __  | | | \ \ | |                  |
|           \ \| |  | | ___/ /  / /   | | | |  \ \| |                  |
|            \___/  |_|/____/  /_/    |_| |_|   \___|                  |
|                  Computer Science and Engineering                    |
|  Bangabandhu Sheikh Mujibur Rahman Science and Technology University |
|         devskill:jisancse||uva:jishan047||github:jisan047            |
\**********************************************************************/

                /********************\
                |                    |
                |    lets try.....   |
                |                    |
                \********************/

#include<bits/stdc++.h>
using namespace std;

///pre-processing
#define     gcd(a, b)       __gcd(a,b)
#define     lcm(a, b)       (a * b) / gcd(a, b)
#define     loop(i, n)      for(int i=0;i<n;i++)
#define     all(x)          x.begin(),x.end()
#define     mem(a, x)       memset(a,x,sizeof a)
#define     endl            '\n'
#define     ss              second
#define     ff              first
#define     TN              typename

///input functions
int Int(){int x;scanf("%d",&x);return x;}
long long Long(){long long x;scanf("%lld",&x);return x;}
double Double(){double x;scanf("%lf",&x);return x;}

///input functions shorting
#define Int Int()
#define Long Long()
#define Double Double()
#define Float Float()

///Constants
const int N = (int) 1e5 + 5;
const long long MOD = (int) 1e9 + 7;
//Trying to do something.
//()()()()()()()()() ..... ()()()()()()()()()()()()
//~~~~~~~~~~~~~~~~~~~~~~Get Ready~~~~~~~~~~~~~~~~~~~~~

///debugger
#define error(args...) { vector<string> _v = split(#args, ','); err(_v.begin(), args); cout<<endl; }

vector<string> split(const string& s, char c) {
    vector<string> v;
    stringstream ss(s);
    string x;
    while (getline(ss, x, c))
        v.emplace_back(x);
    return move(v);
}

void err(vector<string>::iterator it) {}
template<typename T, typename... Args>
void err(vector<string>::iterator it, T a, Args... args) {
    cout << it -> substr((*it)[0] == ' ', it -> length()) << " = " << a << "  ";
    err(++it, args...);
}
///end

// loading..................

int Set(int mask, int pos){return mask |= (1 << pos);}
int Reset(int mask, int pos){return mask &= ~(1 << pos);}
bool Check(int mask, int pos){return (bool) (mask & (1 << pos));}

map < int, map < int, int > > dp[17];
map < int, map < int, int > > vis[17];
int n, m;
int cost[17];
int bill[17];

int solution(int mask, int pos, int ammount){
    if(pos < 0) return (int) __builtin_popcount(mask);
    if(mask == (1 << n ) - 1)return n + 12;

    if(vis[pos][ammount][mask] == 1) return dp[pos][ammount][mask];
    vis[pos][ammount][mask] = 1;


    int ret = 30;
    for(int i = 0; i < n; i++){
        if(Check(mask, i) == 0 and ammount >= cost[i]){
            int rem = ammount - cost[i];
            if(rem == 0) ret = min(ret, solution(Set(mask, i), pos - 1, bill[pos - 1]));
            else ret = min(ret, solution(Set(mask, i),pos, rem));
        }
    }
    return dp[pos][ammount][mask] = ret;
}

int main()
{
    //freopen("input.txt","r",stdin);
    int t = Int, cs = 0;
    while(t--){
        n = Int;
        //memset(dp, -1, sizeof dp);
        for(int i = 0; i < n; i++)cost[i] = Int;
        m = Int;
        for(int i = 0; i < m; i++)bill[i] = Int;
            
        for(int i=0; i<17; i++){
            dp[i].clear();
            vis[i].clear();
        }
        int ans = solution(0,m - 1 , bill[m - 1]);
        printf("Case %d: %d\n", ++cs, ans <= n ? ans : -1);
    }
    return 0;
}
