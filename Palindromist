#include<bits/stdc++.h>
using namespace std;

#define ll          long long
#define ull         unsigned ll

const int N = (int) 1e7 + 5;

ull power[N];
ull p = 131;

void genarate_power(){
    power[0] = 1;
    for(int i = 1 ; i < N ; i++)power[i] = (power[i - 1] * p);
}
ull hashVal;
ull rHash;
void getHash(string s){
    for(int i = 0 ; s[i] ; i++){
        hashVal += (s[i] * power[i]);
    }
    for(int i = (int) s.size() - 1, j = 0; i >= 0 ; i--, j++){
        rHash += (s[i] * power[j]);
    }
}
int main(){
    //freopen("in.txt", "r", stdin);
    int t, cs = 0;
    genarate_power();
    cin >> t;
    while(t--){
        printf("Case %d:\n" , ++cs);
        rHash = 0;
        hashVal = 0;
        string s;
        cin >> s;
        getHash(s);
        int q;
        cin >> q;
        ll nw = 0LL;
        int sz = (int) s.size();
        for(int i = 0; i < q; i++){
            char type, aa;
            int time;
            cin >> type >> aa >> time;
            if(type == 'L'){
                hashVal *= power[time];
                for(int i = 0 ; i < time ; i++){
                    hashVal += (aa * power[i]);
                    rHash += (aa * power[sz] * power[nw++]);
                }
                puts(hashVal == rHash ? "Yes":"No");
            }
            else{
                rHash *= power[time];
                for(int i = 0 ; i < time ; i++){
                    rHash += (aa * power[i]);
                    hashVal += (aa * power[sz] * power[nw++]);
                }
                puts(hashVal == rHash ? "Yes":"No");
            }
        }
    }
}
